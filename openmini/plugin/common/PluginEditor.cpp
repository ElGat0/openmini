/// @filename PluginEditor.cpp
/// @brief OpenMini plugin editor (UI & control)
/// @author gm
/// @copyright gm 2013
///
/// This file is part of OpenMini
///
/// OpenMini is free software: you can redistribute it and/or modify
/// it under the terms of the GNU General Public License as published by
/// the Free Software Foundation, either version 3 of the License, or
/// (at your option) any later version.
///
/// OpenMini is distributed in the hope that it will be useful,
/// but WITHOUT ANY WARRANTY; without even the implied warranty of
/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
/// GNU General Public License for more details.
///
/// You should have received a copy of the GNU General Public License
/// along with OpenMini.  If not, see <http://www.gnu.org/licenses/>.


// This file is NOT generated by Juce (at least not after the first time),
// That's why we apply our coding style here

#include "openmini/plugin/common/PluginEditor.h"
OpenMiniAudioProcessorEditor::OpenMiniAudioProcessorEditor (OpenMiniAudioProcessor* ownerFilter)
    : AudioProcessorEditor (ownerFilter),
      owner_(ownerFilter) {
  addAndMakeVisible (keyboard_ = new juce::TextButton("Trigger Note On"));
  keyboard_->addListener(this);
  // This is where our plugin's editor size is set.
  setSize (kMainWindowSizeX, kMainWindowSizeY);
}

OpenMiniAudioProcessorEditor::~OpenMiniAudioProcessorEditor() {
}

void OpenMiniAudioProcessorEditor::paint (Graphics& g) {
  g.fillAll (Colours::white);
  keyboard_->setBounds(0, 0, 100, 100);
}

void OpenMiniAudioProcessorEditor::buttonClicked (Button*) {
  return;
}

void OpenMiniAudioProcessorEditor::buttonStateChanged (Button* button) {
  if (button->isDown()) {
    owner_->triggerNoteOn();
  } else {
    owner_->triggerNoteOff();
  }
}
